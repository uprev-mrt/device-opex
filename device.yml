---
name: stm8_expander
category: Device/IO
description: Driver for STM8 running custom GPIO expander firmware 
datasheet: https://www.st.com/resource/en/datasheet/stm8s003f3.pdf
mfg: UpRev
mfg_pn: STM8S003F3
digikey_pn: 497-18052-2-ND

prefix: io  #prefix used in code generation
bus: I2C, SPI    # defines the buses that can be used to access registers 
i2c_addr: 0x42   # defines the I2C device address (if device uses I2C)

###########################################################################################################
#                                   REGISTERS                                                             #
###########################################################################################################

registers:             
    - GPIO_IN:         { addr: 0x00 , type: uint16_t, perm: r, desc: Input values for gpio 0-15}                
    - GPIO_OUT:        { addr: 0x02 , type: uint16_t, perm: rw, desc: Output values for gpio 0-15}

    - ADC_0_VAL:       { addr: 0x06 , type: uint16_t, perm: r, desc: Output of ADC 0}
    - ADC_1_VAL:       { addr: 0x08 , type: uint16_t, perm: r, desc: Output of ADC 1}
    - ADC_2_VAL:       { addr: 0x0A , type: uint16_t, perm: r, desc: Output of ADC 2}
    - ADC_3_VAL:       { addr: 0x0C , type: uint16_t, perm: r, desc: Output of ADC 3}
    - ADC_4_VAL:       { addr: 0x0E , type: uint16_t, perm: r, desc: Output of ADC 4}

    #Gpio config
    - GPIO_0_CFG:      { addr: 0x10 , type: uint8_t, perm: rw, desc: Configuration for GPIO 0}   
    - GPIO_1_CFG:      { addr: 0x11 , type: uint8_t, perm: rw, desc: Configuration for GPIO 1}   
    - GPIO_2_CFG:      { addr: 0x12 , type: uint8_t, perm: rw, desc: Configuration for GPIO 2}   
    - GPIO_3_CFG:      { addr: 0x13 , type: uint8_t, perm: rw, desc: Configuration for GPIO 3}   
    - GPIO_4_CFG:      { addr: 0x14 , type: uint8_t, perm: rw, desc: Configuration for GPIO 4}   
    - GPIO_5_CFG:      { addr: 0x15 , type: uint8_t, perm: rw, desc: Configuration for GPIO 5}   
    - GPIO_6_CFG:      { addr: 0x16 , type: uint8_t, perm: rw, desc: Configuration for GPIO 6}   
    - GPIO_7_CFG:      { addr: 0x17 , type: uint8_t, perm: rw, desc: Configuration for GPIO 7}   
    - GPIO_8_CFG:      { addr: 0x18 , type: uint8_t, perm: rw, desc: Configuration for GPIO 8}   
    - GPIO_9_CFG:      { addr: 0x19 , type: uint8_t, perm: rw, desc: Configuration for GPIO 9}   
    - GPIO_10_CFG:     { addr: 0x1A , type: uint8_t, perm: rw, desc: Configuration for GPIO 10}   
    - GPIO_11_CFG:     { addr: 0x1B , type: uint8_t, perm: rw, desc: Configuration for GPIO 11}

    #ADC config
    - ADC_0_CFG:       { addr: 0x20 , type: uint16_t, perm: rw, desc: Configuration for ADC 0 }
    - ADC_1_CFG:       { addr: 0x22 , type: uint16_t, perm: rw, desc: Configuration for ADC 1 }
    - ADC_2_CFG:       { addr: 0x24 , type: uint16_t, perm: rw, desc: Configuration for ADC 2 }
    - ADC_3_CFG:       { addr: 0x26 , type: uint16_t, perm: rw, desc: Configuration for ADC 3 }
    - ADC_4_CFG:       { addr: 0x28 , type: uint16_t, perm: rw, desc: Configuration for ADC 4 }

    #PWM Config
    - PWM_CONFIG:      {addr: 0x30, type: uint32_t, perm: rw, desc: Configuration for PWM }

    - EEPROM_MEM:      {addr: 0x7F, type: uint8_t, perm: rw, desc: Start address of EEPROM memory on stm8. User can read/write up to 128 bytes starting at this address}
    

###########################################################################################################
#                                   Fields                                                                #
###########################################################################################################

# setting up re-usable chunks
gpio_dir_vals: &gpio_dir_vals
        - IN :  { val: 0, desc: GPIO is an input }
        - OUT : {val: 1, desc: GPIO is an output }

irq_vals: &irq_vals
        - NONE :    { val: 0b00, desc: No interrupt  }
        - RISING :  { val: 0b01, desc: Trigger on Rising }
        - FALLING : { val: 0b10, desc: Trigger on falling }
        - ANY :     { val: 0b11, desc: Trigger on any }

GPIO_CFG: &gpio_cfg
    - DIR: {mask: 0x80, desc: Pin Direction, vals: *gpio_dir_vals }
    - PP:  {mask: 0x40 , desc: 'Enables Push/Pull, Otherwise pin is OpenDrain/floating' }
    - IRQ: {mask: 0x30, desc: 'Interrupt selection', vals: *irq_vals }
    - ALT: {mask: 0x08, desc: 'Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc)'}
    - EN:  {mask: 0x01, desc: 'Enables GPIO'}

ADC_CFG: &adc_cfg
    - Treshold: {mask: 0xFFF0, desc: IRQ threshold for ADC channel}
    - IRQ: {mask: 0x000C, desc: 'Interrupt setting for ADC channel', vals: *irq_vals}
    - EN:  {mask: 0x0001, desc: Enables ADC Channel}

fields:
    - GPIO_IN
    - GPIO_OUT
    - GPIO_0_CFG: *gpio_cfg
    - GPIO_1_CFG: *gpio_cfg
    - GPIO_2_CFG: *gpio_cfg
    - GPIO_3_CFG: *gpio_cfg
    - GPIO_4_CFG: *gpio_cfg
    - GPIO_5_CFG: *gpio_cfg
    - GPIO_6_CFG: *gpio_cfg
    - GPIO_7_CFG: *gpio_cfg
    - GPIO_8_CFG: *gpio_cfg
    - GPIO_9_CFG: *gpio_cfg
    - GPIO_10_CFG: *gpio_cfg
    - GPIO_11_CFG: *gpio_cfg

    - ADC_0_CFG: *adc_cfg
    - ADC_1_CFG: *adc_cfg
    - ADC_2_CFG: *adc_cfg
    - ADC_3_CFG: *adc_cfg
    - ADC_4_CFG: *adc_cfg

    - PWM_CONFIG: 
        - Period:    {mask: 0xFFFF0000, desc: Period for PWM signals}
        - Prescaler: 
            mask: 0x0000F000
            desc: Prescaler for PWM, using 16Mhz clock
            vals:
                - PRESCALER_1     : { val: 0x00, desc: divide clock by 1 (16Mhz) }
                - PRESCALER_2     : { val: 0x01, desc: divide clock by 2 (8Mhz)   }
                - PRESCALER_4     : { val: 0x02, desc: divide clock by 4  (4Mhz)   }
                - PRESCALER_8     : { val: 0x03, desc: divide clock by 8  (2Mhz)   }
                - PRESCALER_16    : { val: 0x04, desc: divide clock by 16  (1Mhz)   }
                - PRESCALER_32    : { val: 0x05, desc: divide clock by 32  (500Khz)   }
                - PRESCALER_64    : { val: 0x06, desc: divide clock by 64  (250Khz)   }
                - PRESCALER_128   : { val: 0x07, desc: divide clock by 128 (125Khz)   }
                - PRESCALER_256   : { val: 0x08, desc: divide clock by 256 (62.5 Khz)   }
                - PRESCALER_512   : { val: 0x09, desc: divide clock by 512  (31.25 Khz)   }
                - PRESCALER_1024  : { val: 0x0A, desc: divide clock by 1024 (1.5625 KHz)   }
                - PRESCALER_2048  : { val: 0x0B, desc: divide clock by 2048  ()   }
                - PRESCALER_4096  : { val: 0x0C, desc: divide clock by 4096  ()   }
                - PRESCALER_8192  : { val: 0x0D, desc: divide clock by 8192  ()   }
                - PRESCALER_16384 : { val: 0x0E, desc: divide clock by 16384 ()   }
                - PRESCALER_32768 : { val: 0x0F, desc: divide clock by 32768 ()   }
        - CH0_Enable: { bit: 0, desc: Enables PWM channel 0 }
        - CH1_Enable: { bit: 1, desc: Enables PWM channel 1 }
        - CH2_Enable: { bit: 2, desc: Enables PWM channel 2 }
        - CH3_Enable: { bit: 3, desc: Enables PWM channel 3 }
        - CH4_Enable: { bit: 4, desc: Enables PWM channel 4 }
        - CH5_Enable: { bit: 5, desc: Enables PWM channel 5 }
        - CH6_Enable: { bit: 6, desc: Enables PWM channel 6 }
        - CH7_Enable: { bit: 7, desc: Enables PWM channel 7 }





###########################################################################################################
#                                   Preset Configs                                                        #
###########################################################################################################





