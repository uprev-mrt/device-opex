/**
  * @file opex_regs.h
  * @author generated by mrt-device utility 
  * @link [https://github.com/uprev-mrt/mrtutils/wiki/mrt-device]
  * @brief values and constants for the opex device registers
  * 
  */

#define OPEX_I2C_ADDRESS 0x42
#define OPEX_REG_ADDR_SIZE 1
#define OPEX_REG_COUNT 51


/*******************************************************************************
  Register Addresses                                                                              
*******************************************************************************/

#define IO_REG_GPIO_IN_ADDR                                        0x00 /* Input values for gpio 0-25 */
#define IO_REG_GPIO_OUT_ADDR                                       0x04 /* Output values for gpio 0-15 */
#define IO_REG_GPIO_DDR_ADDR                                       0x08 /* Direction Register for GPIO */
#define IO_REG_IRQ_SRC_ADDR                                        0x0C /* latching Interrupt source mask. indicates souce of IRQ resets on read */
#define IO_REG_ADC_0_VAL_ADDR                                      0x10 /* Output of ADC 0 */
#define IO_REG_ADC_1_VAL_ADDR                                      0x12 /* Output of ADC 1 */
#define IO_REG_ADC_2_VAL_ADDR                                      0x14 /* Output of ADC 2 */
#define IO_REG_ADC_3_VAL_ADDR                                      0x16 /* Output of ADC 3 */
#define IO_REG_ADC_4_VAL_ADDR                                      0x18 /* Output of ADC 4 */
#define IO_REG_PWM_0_VAL_ADDR                                      0x1A /* PWM value for ch 0 */
#define IO_REG_PWM_1_VAL_ADDR                                      0x1C /* PWM value for ch 1 */
#define IO_REG_PWM_2_VAL_ADDR                                      0x1E /* PWM value for ch 2 */
#define IO_REG_PWM_3_VAL_ADDR                                      0x20 /* PWM value for ch 3 */
#define IO_REG_PWM_4_VAL_ADDR                                      0x22 /* PWM value for ch 4 */
#define IO_REG_PWM_5_VAL_ADDR                                      0x24 /* PWM value for ch 5 */
#define IO_REG_GPIO_0_CFG_ADDR                                     0x26 /* Configuration for GPIO 0 */
#define IO_REG_GPIO_1_CFG_ADDR                                     0x27 /* Configuration for GPIO 1 */
#define IO_REG_GPIO_2_CFG_ADDR                                     0x28 /* Configuration for GPIO 2 */
#define IO_REG_GPIO_3_CFG_ADDR                                     0x29 /* Configuration for GPIO 3 */
#define IO_REG_GPIO_4_CFG_ADDR                                     0x2A /* Configuration for GPIO 4 */
#define IO_REG_GPIO_5_CFG_ADDR                                     0x2B /* Configuration for GPIO 5 */
#define IO_REG_GPIO_6_CFG_ADDR                                     0x2C /* Configuration for GPIO 6 */
#define IO_REG_GPIO_7_CFG_ADDR                                     0x2D /* Configuration for GPIO 7 */
#define IO_REG_GPIO_8_CFG_ADDR                                     0x2E /* Configuration for GPIO 8 */
#define IO_REG_GPIO_9_CFG_ADDR                                     0x2F /* Configuration for GPIO 9 */
#define IO_REG_GPIO_10_CFG_ADDR                                    0x30 /* Configuration for GPIO 10 */
#define IO_REG_GPIO_11_CFG_ADDR                                    0x31 /* Configuration for GPIO 11 */
#define IO_REG_GPIO_12_CFG_ADDR                                    0x32 /* Configuration for GPIO 12 */
#define IO_REG_GPIO_13_CFG_ADDR                                    0x33 /* Configuration for GPIO 13 */
#define IO_REG_GPIO_14_CFG_ADDR                                    0x34 /* Configuration for GPIO 14 */
#define IO_REG_GPIO_15_CFG_ADDR                                    0x35 /* Configuration for GPIO 15 */
#define IO_REG_GPIO_16_CFG_ADDR                                    0x36 /* Configuration for GPIO 16 */
#define IO_REG_GPIO_17_CFG_ADDR                                    0x37 /* Configuration for GPIO 17 */
#define IO_REG_GPIO_18_CFG_ADDR                                    0x38 /* Configuration for GPIO 18 */
#define IO_REG_GPIO_19_CFG_ADDR                                    0x39 /* Configuration for GPIO 19 */
#define IO_REG_GPIO_20_CFG_ADDR                                    0x3A /* Configuration for GPIO 20 */
#define IO_REG_GPIO_21_CFG_ADDR                                    0x3B /* Configuration for GPIO 21 */
#define IO_REG_GPIO_22_CFG_ADDR                                    0x3C /* Configuration for GPIO 22 */
#define IO_REG_GPIO_23_CFG_ADDR                                    0x3D /* Configuration for GPIO 23 */
#define IO_REG_GPIO_24_CFG_ADDR                                    0x3E /* Configuration for GPIO 24 */
#define IO_REG_GPIO_25_CFG_ADDR                                    0x3F /* Configuration for GPIO 25 */
#define IO_REG_IRQ_CFG_ADDR                                        0x40 /* IRQ Configuration */
#define IO_REG_ADC_0_CFG_ADDR                                      0x42 /* Configuration for ADC 0 */
#define IO_REG_ADC_1_CFG_ADDR                                      0x44 /* Configuration for ADC 1 */
#define IO_REG_ADC_2_CFG_ADDR                                      0x46 /* Configuration for ADC 2 */
#define IO_REG_ADC_3_CFG_ADDR                                      0x48 /* Configuration for ADC 3 */
#define IO_REG_ADC_4_CFG_ADDR                                      0x4A /* Configuration for ADC 4 */
#define IO_REG_PWM_CONFIG_ADDR                                     0x4C /* Configuration for PWM */
#define IO_REG_WHO_AM_I_ADDR                                       0x50 /* Device ID */
#define IO_REG_VERSION_ADDR                                        0x51 /* Version of firmware */
#define IO_REG_EEPROM_MEM_ADDR                                     0x70 /* Start address of EEPROM memory on stm8. User can read/write up to 128 bytes starting at this address */


/*******************************************************************************
  Fields                                                                              
*******************************************************************************/

/* IRQ_SRC Register Fields */
    /* IRQ_SRC -> IRQ_SRC */
    #define IO_IRQ_SRC_IRQ_SRC_FIELD_MASK                          0xFFFFFFFF /* Source of IRQ */
    #define IO_IRQ_SRC_IRQ_SRC_FIELD_OFFSET                        0x00000000
      #define IO_IRQ_SRC_IRQ_SRC_GPIO_0                            0x00000001 /* IRQ triggered by GPIO0 */
      #define IO_IRQ_SRC_IRQ_SRC_ADC_0                             0x04000000 /* IRQ triggered by ADC0 */
      #define IO_IRQ_SRC_IRQ_SRC_ADC_1                             0x08000000 /* IRQ triggered by ADC1 */
      #define IO_IRQ_SRC_IRQ_SRC_ADC_2                             0x10000000 /* IRQ triggered by ADC2 */
      #define IO_IRQ_SRC_IRQ_SRC_ADC_3                             0x20000000 /* IRQ triggered by ADC3 */
      #define IO_IRQ_SRC_IRQ_SRC_ADC_4                             0x40000000 /* IRQ triggered by ADC4 */

/* GPIO_0_CFG Register Fields */
    /* GPIO_0_CFG -> Flags */
    #define IO_GPIO_0_CFG_PP                                       0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_0_CFG_ALT                                      0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_0_CFG_EN                                       0x01 /* Enables GPIO */
    /* GPIO_0_CFG -> DIR */
    #define IO_GPIO_0_CFG_DIR_FIELD_MASK                           0x80 /* Pin Direction */
    #define IO_GPIO_0_CFG_DIR_FIELD_OFFSET                         0x07
      #define IO_GPIO_0_CFG_DIR_IN                                 0x00 /* GPIO is an input */
      #define IO_GPIO_0_CFG_DIR_OUT                                0x01 /* GPIO is an output */
    /* GPIO_0_CFG -> LL */
    #define IO_GPIO_0_CFG_LL_FIELD_MASK                            0x10 /* Low Level */
    #define IO_GPIO_0_CFG_LL_FIELD_OFFSET                          0x04
      #define IO_GPIO_0_CFG_LL_LOW                                 0x00 /* Low level output */
      #define IO_GPIO_0_CFG_LL_HIGH                                0x01 /*  */
    /* GPIO_0_CFG -> IRQ */
    #define IO_GPIO_0_CFG_IRQ_FIELD_MASK                           0x0C /* Interrupt selection */
    #define IO_GPIO_0_CFG_IRQ_FIELD_OFFSET                         0x02
      #define IO_GPIO_0_CFG_IRQ_NONE                               0x00 /* No interrupt */
      #define IO_GPIO_0_CFG_IRQ_RISING                             0x01 /* Trigger on Rising */
      #define IO_GPIO_0_CFG_IRQ_FALLING                            0x02 /* Trigger on falling */
      #define IO_GPIO_0_CFG_IRQ_ANY                                0x03 /* Trigger on any */

/* GPIO_1_CFG Register Fields */
    /* GPIO_1_CFG -> Flags */
    #define IO_GPIO_1_CFG_PP                                       0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_1_CFG_ALT                                      0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_1_CFG_EN                                       0x01 /* Enables GPIO */
    /* GPIO_1_CFG -> DIR */
    #define IO_GPIO_1_CFG_DIR_FIELD_MASK                           0x80 /* Pin Direction */
    #define IO_GPIO_1_CFG_DIR_FIELD_OFFSET                         0x07
      #define IO_GPIO_1_CFG_DIR_IN                                 0x00 /* GPIO is an input */
      #define IO_GPIO_1_CFG_DIR_OUT                                0x01 /* GPIO is an output */
    /* GPIO_1_CFG -> LL */
    #define IO_GPIO_1_CFG_LL_FIELD_MASK                            0x10 /* Low Level */
    #define IO_GPIO_1_CFG_LL_FIELD_OFFSET                          0x04
      #define IO_GPIO_1_CFG_LL_LOW                                 0x00 /* Low level output */
      #define IO_GPIO_1_CFG_LL_HIGH                                0x01 /*  */
    /* GPIO_1_CFG -> IRQ */
    #define IO_GPIO_1_CFG_IRQ_FIELD_MASK                           0x0C /* Interrupt selection */
    #define IO_GPIO_1_CFG_IRQ_FIELD_OFFSET                         0x02
      #define IO_GPIO_1_CFG_IRQ_NONE                               0x00 /* No interrupt */
      #define IO_GPIO_1_CFG_IRQ_RISING                             0x01 /* Trigger on Rising */
      #define IO_GPIO_1_CFG_IRQ_FALLING                            0x02 /* Trigger on falling */
      #define IO_GPIO_1_CFG_IRQ_ANY                                0x03 /* Trigger on any */

/* GPIO_2_CFG Register Fields */
    /* GPIO_2_CFG -> Flags */
    #define IO_GPIO_2_CFG_PP                                       0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_2_CFG_ALT                                      0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_2_CFG_EN                                       0x01 /* Enables GPIO */
    /* GPIO_2_CFG -> DIR */
    #define IO_GPIO_2_CFG_DIR_FIELD_MASK                           0x80 /* Pin Direction */
    #define IO_GPIO_2_CFG_DIR_FIELD_OFFSET                         0x07
      #define IO_GPIO_2_CFG_DIR_IN                                 0x00 /* GPIO is an input */
      #define IO_GPIO_2_CFG_DIR_OUT                                0x01 /* GPIO is an output */
    /* GPIO_2_CFG -> LL */
    #define IO_GPIO_2_CFG_LL_FIELD_MASK                            0x10 /* Low Level */
    #define IO_GPIO_2_CFG_LL_FIELD_OFFSET                          0x04
      #define IO_GPIO_2_CFG_LL_LOW                                 0x00 /* Low level output */
      #define IO_GPIO_2_CFG_LL_HIGH                                0x01 /*  */
    /* GPIO_2_CFG -> IRQ */
    #define IO_GPIO_2_CFG_IRQ_FIELD_MASK                           0x0C /* Interrupt selection */
    #define IO_GPIO_2_CFG_IRQ_FIELD_OFFSET                         0x02
      #define IO_GPIO_2_CFG_IRQ_NONE                               0x00 /* No interrupt */
      #define IO_GPIO_2_CFG_IRQ_RISING                             0x01 /* Trigger on Rising */
      #define IO_GPIO_2_CFG_IRQ_FALLING                            0x02 /* Trigger on falling */
      #define IO_GPIO_2_CFG_IRQ_ANY                                0x03 /* Trigger on any */

/* GPIO_3_CFG Register Fields */
    /* GPIO_3_CFG -> Flags */
    #define IO_GPIO_3_CFG_PP                                       0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_3_CFG_ALT                                      0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_3_CFG_EN                                       0x01 /* Enables GPIO */
    /* GPIO_3_CFG -> DIR */
    #define IO_GPIO_3_CFG_DIR_FIELD_MASK                           0x80 /* Pin Direction */
    #define IO_GPIO_3_CFG_DIR_FIELD_OFFSET                         0x07
      #define IO_GPIO_3_CFG_DIR_IN                                 0x00 /* GPIO is an input */
      #define IO_GPIO_3_CFG_DIR_OUT                                0x01 /* GPIO is an output */
    /* GPIO_3_CFG -> LL */
    #define IO_GPIO_3_CFG_LL_FIELD_MASK                            0x10 /* Low Level */
    #define IO_GPIO_3_CFG_LL_FIELD_OFFSET                          0x04
      #define IO_GPIO_3_CFG_LL_LOW                                 0x00 /* Low level output */
      #define IO_GPIO_3_CFG_LL_HIGH                                0x01 /*  */
    /* GPIO_3_CFG -> IRQ */
    #define IO_GPIO_3_CFG_IRQ_FIELD_MASK                           0x0C /* Interrupt selection */
    #define IO_GPIO_3_CFG_IRQ_FIELD_OFFSET                         0x02
      #define IO_GPIO_3_CFG_IRQ_NONE                               0x00 /* No interrupt */
      #define IO_GPIO_3_CFG_IRQ_RISING                             0x01 /* Trigger on Rising */
      #define IO_GPIO_3_CFG_IRQ_FALLING                            0x02 /* Trigger on falling */
      #define IO_GPIO_3_CFG_IRQ_ANY                                0x03 /* Trigger on any */

/* GPIO_4_CFG Register Fields */
    /* GPIO_4_CFG -> Flags */
    #define IO_GPIO_4_CFG_PP                                       0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_4_CFG_ALT                                      0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_4_CFG_EN                                       0x01 /* Enables GPIO */
    /* GPIO_4_CFG -> DIR */
    #define IO_GPIO_4_CFG_DIR_FIELD_MASK                           0x80 /* Pin Direction */
    #define IO_GPIO_4_CFG_DIR_FIELD_OFFSET                         0x07
      #define IO_GPIO_4_CFG_DIR_IN                                 0x00 /* GPIO is an input */
      #define IO_GPIO_4_CFG_DIR_OUT                                0x01 /* GPIO is an output */
    /* GPIO_4_CFG -> LL */
    #define IO_GPIO_4_CFG_LL_FIELD_MASK                            0x10 /* Low Level */
    #define IO_GPIO_4_CFG_LL_FIELD_OFFSET                          0x04
      #define IO_GPIO_4_CFG_LL_LOW                                 0x00 /* Low level output */
      #define IO_GPIO_4_CFG_LL_HIGH                                0x01 /*  */
    /* GPIO_4_CFG -> IRQ */
    #define IO_GPIO_4_CFG_IRQ_FIELD_MASK                           0x0C /* Interrupt selection */
    #define IO_GPIO_4_CFG_IRQ_FIELD_OFFSET                         0x02
      #define IO_GPIO_4_CFG_IRQ_NONE                               0x00 /* No interrupt */
      #define IO_GPIO_4_CFG_IRQ_RISING                             0x01 /* Trigger on Rising */
      #define IO_GPIO_4_CFG_IRQ_FALLING                            0x02 /* Trigger on falling */
      #define IO_GPIO_4_CFG_IRQ_ANY                                0x03 /* Trigger on any */

/* GPIO_5_CFG Register Fields */
    /* GPIO_5_CFG -> Flags */
    #define IO_GPIO_5_CFG_PP                                       0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_5_CFG_ALT                                      0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_5_CFG_EN                                       0x01 /* Enables GPIO */
    /* GPIO_5_CFG -> DIR */
    #define IO_GPIO_5_CFG_DIR_FIELD_MASK                           0x80 /* Pin Direction */
    #define IO_GPIO_5_CFG_DIR_FIELD_OFFSET                         0x07
      #define IO_GPIO_5_CFG_DIR_IN                                 0x00 /* GPIO is an input */
      #define IO_GPIO_5_CFG_DIR_OUT                                0x01 /* GPIO is an output */
    /* GPIO_5_CFG -> LL */
    #define IO_GPIO_5_CFG_LL_FIELD_MASK                            0x10 /* Low Level */
    #define IO_GPIO_5_CFG_LL_FIELD_OFFSET                          0x04
      #define IO_GPIO_5_CFG_LL_LOW                                 0x00 /* Low level output */
      #define IO_GPIO_5_CFG_LL_HIGH                                0x01 /*  */
    /* GPIO_5_CFG -> IRQ */
    #define IO_GPIO_5_CFG_IRQ_FIELD_MASK                           0x0C /* Interrupt selection */
    #define IO_GPIO_5_CFG_IRQ_FIELD_OFFSET                         0x02
      #define IO_GPIO_5_CFG_IRQ_NONE                               0x00 /* No interrupt */
      #define IO_GPIO_5_CFG_IRQ_RISING                             0x01 /* Trigger on Rising */
      #define IO_GPIO_5_CFG_IRQ_FALLING                            0x02 /* Trigger on falling */
      #define IO_GPIO_5_CFG_IRQ_ANY                                0x03 /* Trigger on any */

/* GPIO_6_CFG Register Fields */
    /* GPIO_6_CFG -> Flags */
    #define IO_GPIO_6_CFG_PP                                       0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_6_CFG_ALT                                      0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_6_CFG_EN                                       0x01 /* Enables GPIO */
    /* GPIO_6_CFG -> DIR */
    #define IO_GPIO_6_CFG_DIR_FIELD_MASK                           0x80 /* Pin Direction */
    #define IO_GPIO_6_CFG_DIR_FIELD_OFFSET                         0x07
      #define IO_GPIO_6_CFG_DIR_IN                                 0x00 /* GPIO is an input */
      #define IO_GPIO_6_CFG_DIR_OUT                                0x01 /* GPIO is an output */
    /* GPIO_6_CFG -> LL */
    #define IO_GPIO_6_CFG_LL_FIELD_MASK                            0x10 /* Low Level */
    #define IO_GPIO_6_CFG_LL_FIELD_OFFSET                          0x04
      #define IO_GPIO_6_CFG_LL_LOW                                 0x00 /* Low level output */
      #define IO_GPIO_6_CFG_LL_HIGH                                0x01 /*  */
    /* GPIO_6_CFG -> IRQ */
    #define IO_GPIO_6_CFG_IRQ_FIELD_MASK                           0x0C /* Interrupt selection */
    #define IO_GPIO_6_CFG_IRQ_FIELD_OFFSET                         0x02
      #define IO_GPIO_6_CFG_IRQ_NONE                               0x00 /* No interrupt */
      #define IO_GPIO_6_CFG_IRQ_RISING                             0x01 /* Trigger on Rising */
      #define IO_GPIO_6_CFG_IRQ_FALLING                            0x02 /* Trigger on falling */
      #define IO_GPIO_6_CFG_IRQ_ANY                                0x03 /* Trigger on any */

/* GPIO_7_CFG Register Fields */
    /* GPIO_7_CFG -> Flags */
    #define IO_GPIO_7_CFG_PP                                       0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_7_CFG_ALT                                      0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_7_CFG_EN                                       0x01 /* Enables GPIO */
    /* GPIO_7_CFG -> DIR */
    #define IO_GPIO_7_CFG_DIR_FIELD_MASK                           0x80 /* Pin Direction */
    #define IO_GPIO_7_CFG_DIR_FIELD_OFFSET                         0x07
      #define IO_GPIO_7_CFG_DIR_IN                                 0x00 /* GPIO is an input */
      #define IO_GPIO_7_CFG_DIR_OUT                                0x01 /* GPIO is an output */
    /* GPIO_7_CFG -> LL */
    #define IO_GPIO_7_CFG_LL_FIELD_MASK                            0x10 /* Low Level */
    #define IO_GPIO_7_CFG_LL_FIELD_OFFSET                          0x04
      #define IO_GPIO_7_CFG_LL_LOW                                 0x00 /* Low level output */
      #define IO_GPIO_7_CFG_LL_HIGH                                0x01 /*  */
    /* GPIO_7_CFG -> IRQ */
    #define IO_GPIO_7_CFG_IRQ_FIELD_MASK                           0x0C /* Interrupt selection */
    #define IO_GPIO_7_CFG_IRQ_FIELD_OFFSET                         0x02
      #define IO_GPIO_7_CFG_IRQ_NONE                               0x00 /* No interrupt */
      #define IO_GPIO_7_CFG_IRQ_RISING                             0x01 /* Trigger on Rising */
      #define IO_GPIO_7_CFG_IRQ_FALLING                            0x02 /* Trigger on falling */
      #define IO_GPIO_7_CFG_IRQ_ANY                                0x03 /* Trigger on any */

/* GPIO_8_CFG Register Fields */
    /* GPIO_8_CFG -> Flags */
    #define IO_GPIO_8_CFG_PP                                       0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_8_CFG_ALT                                      0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_8_CFG_EN                                       0x01 /* Enables GPIO */
    /* GPIO_8_CFG -> DIR */
    #define IO_GPIO_8_CFG_DIR_FIELD_MASK                           0x80 /* Pin Direction */
    #define IO_GPIO_8_CFG_DIR_FIELD_OFFSET                         0x07
      #define IO_GPIO_8_CFG_DIR_IN                                 0x00 /* GPIO is an input */
      #define IO_GPIO_8_CFG_DIR_OUT                                0x01 /* GPIO is an output */
    /* GPIO_8_CFG -> LL */
    #define IO_GPIO_8_CFG_LL_FIELD_MASK                            0x10 /* Low Level */
    #define IO_GPIO_8_CFG_LL_FIELD_OFFSET                          0x04
      #define IO_GPIO_8_CFG_LL_LOW                                 0x00 /* Low level output */
      #define IO_GPIO_8_CFG_LL_HIGH                                0x01 /*  */
    /* GPIO_8_CFG -> IRQ */
    #define IO_GPIO_8_CFG_IRQ_FIELD_MASK                           0x0C /* Interrupt selection */
    #define IO_GPIO_8_CFG_IRQ_FIELD_OFFSET                         0x02
      #define IO_GPIO_8_CFG_IRQ_NONE                               0x00 /* No interrupt */
      #define IO_GPIO_8_CFG_IRQ_RISING                             0x01 /* Trigger on Rising */
      #define IO_GPIO_8_CFG_IRQ_FALLING                            0x02 /* Trigger on falling */
      #define IO_GPIO_8_CFG_IRQ_ANY                                0x03 /* Trigger on any */

/* GPIO_9_CFG Register Fields */
    /* GPIO_9_CFG -> Flags */
    #define IO_GPIO_9_CFG_PP                                       0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_9_CFG_ALT                                      0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_9_CFG_EN                                       0x01 /* Enables GPIO */
    /* GPIO_9_CFG -> DIR */
    #define IO_GPIO_9_CFG_DIR_FIELD_MASK                           0x80 /* Pin Direction */
    #define IO_GPIO_9_CFG_DIR_FIELD_OFFSET                         0x07
      #define IO_GPIO_9_CFG_DIR_IN                                 0x00 /* GPIO is an input */
      #define IO_GPIO_9_CFG_DIR_OUT                                0x01 /* GPIO is an output */
    /* GPIO_9_CFG -> LL */
    #define IO_GPIO_9_CFG_LL_FIELD_MASK                            0x10 /* Low Level */
    #define IO_GPIO_9_CFG_LL_FIELD_OFFSET                          0x04
      #define IO_GPIO_9_CFG_LL_LOW                                 0x00 /* Low level output */
      #define IO_GPIO_9_CFG_LL_HIGH                                0x01 /*  */
    /* GPIO_9_CFG -> IRQ */
    #define IO_GPIO_9_CFG_IRQ_FIELD_MASK                           0x0C /* Interrupt selection */
    #define IO_GPIO_9_CFG_IRQ_FIELD_OFFSET                         0x02
      #define IO_GPIO_9_CFG_IRQ_NONE                               0x00 /* No interrupt */
      #define IO_GPIO_9_CFG_IRQ_RISING                             0x01 /* Trigger on Rising */
      #define IO_GPIO_9_CFG_IRQ_FALLING                            0x02 /* Trigger on falling */
      #define IO_GPIO_9_CFG_IRQ_ANY                                0x03 /* Trigger on any */

/* GPIO_10_CFG Register Fields */
    /* GPIO_10_CFG -> Flags */
    #define IO_GPIO_10_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_10_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_10_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_10_CFG -> DIR */
    #define IO_GPIO_10_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_10_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_10_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_10_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_10_CFG -> LL */
    #define IO_GPIO_10_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_10_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_10_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_10_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_10_CFG -> IRQ */
    #define IO_GPIO_10_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_10_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_10_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_10_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_10_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_10_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_11_CFG Register Fields */
    /* GPIO_11_CFG -> Flags */
    #define IO_GPIO_11_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_11_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_11_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_11_CFG -> DIR */
    #define IO_GPIO_11_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_11_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_11_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_11_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_11_CFG -> LL */
    #define IO_GPIO_11_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_11_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_11_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_11_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_11_CFG -> IRQ */
    #define IO_GPIO_11_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_11_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_11_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_11_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_11_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_11_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_12_CFG Register Fields */
    /* GPIO_12_CFG -> Flags */
    #define IO_GPIO_12_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_12_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_12_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_12_CFG -> DIR */
    #define IO_GPIO_12_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_12_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_12_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_12_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_12_CFG -> LL */
    #define IO_GPIO_12_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_12_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_12_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_12_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_12_CFG -> IRQ */
    #define IO_GPIO_12_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_12_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_12_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_12_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_12_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_12_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_13_CFG Register Fields */
    /* GPIO_13_CFG -> Flags */
    #define IO_GPIO_13_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_13_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_13_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_13_CFG -> DIR */
    #define IO_GPIO_13_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_13_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_13_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_13_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_13_CFG -> LL */
    #define IO_GPIO_13_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_13_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_13_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_13_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_13_CFG -> IRQ */
    #define IO_GPIO_13_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_13_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_13_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_13_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_13_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_13_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_14_CFG Register Fields */
    /* GPIO_14_CFG -> Flags */
    #define IO_GPIO_14_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_14_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_14_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_14_CFG -> DIR */
    #define IO_GPIO_14_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_14_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_14_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_14_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_14_CFG -> LL */
    #define IO_GPIO_14_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_14_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_14_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_14_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_14_CFG -> IRQ */
    #define IO_GPIO_14_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_14_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_14_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_14_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_14_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_14_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_15_CFG Register Fields */
    /* GPIO_15_CFG -> Flags */
    #define IO_GPIO_15_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_15_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_15_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_15_CFG -> DIR */
    #define IO_GPIO_15_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_15_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_15_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_15_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_15_CFG -> LL */
    #define IO_GPIO_15_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_15_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_15_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_15_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_15_CFG -> IRQ */
    #define IO_GPIO_15_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_15_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_15_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_15_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_15_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_15_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_16_CFG Register Fields */
    /* GPIO_16_CFG -> Flags */
    #define IO_GPIO_16_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_16_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_16_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_16_CFG -> DIR */
    #define IO_GPIO_16_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_16_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_16_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_16_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_16_CFG -> LL */
    #define IO_GPIO_16_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_16_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_16_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_16_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_16_CFG -> IRQ */
    #define IO_GPIO_16_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_16_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_16_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_16_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_16_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_16_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_17_CFG Register Fields */
    /* GPIO_17_CFG -> Flags */
    #define IO_GPIO_17_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_17_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_17_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_17_CFG -> DIR */
    #define IO_GPIO_17_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_17_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_17_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_17_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_17_CFG -> LL */
    #define IO_GPIO_17_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_17_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_17_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_17_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_17_CFG -> IRQ */
    #define IO_GPIO_17_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_17_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_17_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_17_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_17_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_17_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_18_CFG Register Fields */
    /* GPIO_18_CFG -> Flags */
    #define IO_GPIO_18_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_18_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_18_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_18_CFG -> DIR */
    #define IO_GPIO_18_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_18_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_18_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_18_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_18_CFG -> LL */
    #define IO_GPIO_18_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_18_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_18_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_18_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_18_CFG -> IRQ */
    #define IO_GPIO_18_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_18_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_18_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_18_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_18_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_18_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_19_CFG Register Fields */
    /* GPIO_19_CFG -> Flags */
    #define IO_GPIO_19_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_19_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_19_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_19_CFG -> DIR */
    #define IO_GPIO_19_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_19_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_19_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_19_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_19_CFG -> LL */
    #define IO_GPIO_19_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_19_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_19_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_19_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_19_CFG -> IRQ */
    #define IO_GPIO_19_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_19_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_19_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_19_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_19_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_19_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_20_CFG Register Fields */
    /* GPIO_20_CFG -> Flags */
    #define IO_GPIO_20_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_20_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_20_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_20_CFG -> DIR */
    #define IO_GPIO_20_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_20_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_20_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_20_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_20_CFG -> LL */
    #define IO_GPIO_20_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_20_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_20_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_20_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_20_CFG -> IRQ */
    #define IO_GPIO_20_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_20_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_20_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_20_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_20_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_20_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_21_CFG Register Fields */
    /* GPIO_21_CFG -> Flags */
    #define IO_GPIO_21_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_21_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_21_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_21_CFG -> DIR */
    #define IO_GPIO_21_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_21_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_21_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_21_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_21_CFG -> LL */
    #define IO_GPIO_21_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_21_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_21_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_21_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_21_CFG -> IRQ */
    #define IO_GPIO_21_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_21_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_21_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_21_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_21_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_21_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_22_CFG Register Fields */
    /* GPIO_22_CFG -> Flags */
    #define IO_GPIO_22_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_22_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_22_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_22_CFG -> DIR */
    #define IO_GPIO_22_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_22_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_22_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_22_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_22_CFG -> LL */
    #define IO_GPIO_22_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_22_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_22_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_22_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_22_CFG -> IRQ */
    #define IO_GPIO_22_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_22_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_22_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_22_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_22_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_22_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_23_CFG Register Fields */
    /* GPIO_23_CFG -> Flags */
    #define IO_GPIO_23_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_23_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_23_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_23_CFG -> DIR */
    #define IO_GPIO_23_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_23_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_23_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_23_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_23_CFG -> LL */
    #define IO_GPIO_23_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_23_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_23_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_23_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_23_CFG -> IRQ */
    #define IO_GPIO_23_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_23_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_23_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_23_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_23_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_23_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_24_CFG Register Fields */
    /* GPIO_24_CFG -> Flags */
    #define IO_GPIO_24_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_24_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_24_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_24_CFG -> DIR */
    #define IO_GPIO_24_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_24_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_24_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_24_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_24_CFG -> LL */
    #define IO_GPIO_24_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_24_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_24_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_24_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_24_CFG -> IRQ */
    #define IO_GPIO_24_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_24_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_24_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_24_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_24_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_24_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* GPIO_25_CFG Register Fields */
    /* GPIO_25_CFG -> Flags */
    #define IO_GPIO_25_CFG_PP                                      0x40 /* Enables Push/Pull on output, and Pull-up on input */
    #define IO_GPIO_25_CFG_ALT                                     0x02 /* Indicates that GPIO is disabled because pin is being used for an alternate function (PWM, ADC, etc) */
    #define IO_GPIO_25_CFG_EN                                      0x01 /* Enables GPIO */
    /* GPIO_25_CFG -> DIR */
    #define IO_GPIO_25_CFG_DIR_FIELD_MASK                          0x80 /* Pin Direction */
    #define IO_GPIO_25_CFG_DIR_FIELD_OFFSET                        0x07
      #define IO_GPIO_25_CFG_DIR_IN                                0x00 /* GPIO is an input */
      #define IO_GPIO_25_CFG_DIR_OUT                               0x01 /* GPIO is an output */
    /* GPIO_25_CFG -> LL */
    #define IO_GPIO_25_CFG_LL_FIELD_MASK                           0x10 /* Low Level */
    #define IO_GPIO_25_CFG_LL_FIELD_OFFSET                         0x04
      #define IO_GPIO_25_CFG_LL_LOW                                0x00 /* Low level output */
      #define IO_GPIO_25_CFG_LL_HIGH                               0x01 /*  */
    /* GPIO_25_CFG -> IRQ */
    #define IO_GPIO_25_CFG_IRQ_FIELD_MASK                          0x0C /* Interrupt selection */
    #define IO_GPIO_25_CFG_IRQ_FIELD_OFFSET                        0x02
      #define IO_GPIO_25_CFG_IRQ_NONE                              0x00 /* No interrupt */
      #define IO_GPIO_25_CFG_IRQ_RISING                            0x01 /* Trigger on Rising */
      #define IO_GPIO_25_CFG_IRQ_FALLING                           0x02 /* Trigger on falling */
      #define IO_GPIO_25_CFG_IRQ_ANY                               0x03 /* Trigger on any */

/* IRQ_CFG Register Fields */
    /* IRQ_CFG -> Flags */
    #define IO_IRQ_CFG_ENABLED                                     0x8000 /* Enables IRQ signal on selected GPIO */
    /* IRQ_CFG -> Polarity */
    #define IO_IRQ_CFG_POLARITY_FIELD_MASK                         0x4000 /* Sets polarity of IRQ */
    #define IO_IRQ_CFG_POLARITY_FIELD_OFFSET                       0x000E
      #define IO_IRQ_CFG_POLARITY_ACTIVE_HIGH                      0x0001 /* GPIO is high when IRQ is pending */
      #define IO_IRQ_CFG_POLARITY_ACTIVE_LOW                       0x0000 /* GPIO is low when IRQ is pending */
    /* IRQ_CFG -> Output */
    #define IO_IRQ_CFG_OUTPUT_FIELD_MASK                           0x001F /* Selects the GPIO to use for IRQ */
    #define IO_IRQ_CFG_OUTPUT_FIELD_OFFSET                         0x0000

/* ADC_0_CFG Register Fields */
    /* ADC_0_CFG -> Flags */
    #define IO_ADC_0_CFG_EN                                        0x0001 /* Enables ADC Channel */
    /* ADC_0_CFG -> Treshold */
    #define IO_ADC_0_CFG_TRESHOLD_FIELD_MASK                       0xFFF0 /* IRQ threshold for ADC channel */
    #define IO_ADC_0_CFG_TRESHOLD_FIELD_OFFSET                     0x0004
    /* ADC_0_CFG -> IRQ */
    #define IO_ADC_0_CFG_IRQ_FIELD_MASK                            0x000C /* Interrupt setting for ADC channel */
    #define IO_ADC_0_CFG_IRQ_FIELD_OFFSET                          0x0002
      #define IO_ADC_0_CFG_IRQ_NONE                                0x0000 /* No interrupt */
      #define IO_ADC_0_CFG_IRQ_RISING                              0x0001 /* Trigger on Rising */
      #define IO_ADC_0_CFG_IRQ_FALLING                             0x0002 /* Trigger on falling */
      #define IO_ADC_0_CFG_IRQ_ANY                                 0x0003 /* Trigger on any */

/* ADC_1_CFG Register Fields */
    /* ADC_1_CFG -> Flags */
    #define IO_ADC_1_CFG_EN                                        0x0001 /* Enables ADC Channel */
    /* ADC_1_CFG -> Treshold */
    #define IO_ADC_1_CFG_TRESHOLD_FIELD_MASK                       0xFFF0 /* IRQ threshold for ADC channel */
    #define IO_ADC_1_CFG_TRESHOLD_FIELD_OFFSET                     0x0004
    /* ADC_1_CFG -> IRQ */
    #define IO_ADC_1_CFG_IRQ_FIELD_MASK                            0x000C /* Interrupt setting for ADC channel */
    #define IO_ADC_1_CFG_IRQ_FIELD_OFFSET                          0x0002
      #define IO_ADC_1_CFG_IRQ_NONE                                0x0000 /* No interrupt */
      #define IO_ADC_1_CFG_IRQ_RISING                              0x0001 /* Trigger on Rising */
      #define IO_ADC_1_CFG_IRQ_FALLING                             0x0002 /* Trigger on falling */
      #define IO_ADC_1_CFG_IRQ_ANY                                 0x0003 /* Trigger on any */

/* ADC_2_CFG Register Fields */
    /* ADC_2_CFG -> Flags */
    #define IO_ADC_2_CFG_EN                                        0x0001 /* Enables ADC Channel */
    /* ADC_2_CFG -> Treshold */
    #define IO_ADC_2_CFG_TRESHOLD_FIELD_MASK                       0xFFF0 /* IRQ threshold for ADC channel */
    #define IO_ADC_2_CFG_TRESHOLD_FIELD_OFFSET                     0x0004
    /* ADC_2_CFG -> IRQ */
    #define IO_ADC_2_CFG_IRQ_FIELD_MASK                            0x000C /* Interrupt setting for ADC channel */
    #define IO_ADC_2_CFG_IRQ_FIELD_OFFSET                          0x0002
      #define IO_ADC_2_CFG_IRQ_NONE                                0x0000 /* No interrupt */
      #define IO_ADC_2_CFG_IRQ_RISING                              0x0001 /* Trigger on Rising */
      #define IO_ADC_2_CFG_IRQ_FALLING                             0x0002 /* Trigger on falling */
      #define IO_ADC_2_CFG_IRQ_ANY                                 0x0003 /* Trigger on any */

/* ADC_3_CFG Register Fields */
    /* ADC_3_CFG -> Flags */
    #define IO_ADC_3_CFG_EN                                        0x0001 /* Enables ADC Channel */
    /* ADC_3_CFG -> Treshold */
    #define IO_ADC_3_CFG_TRESHOLD_FIELD_MASK                       0xFFF0 /* IRQ threshold for ADC channel */
    #define IO_ADC_3_CFG_TRESHOLD_FIELD_OFFSET                     0x0004
    /* ADC_3_CFG -> IRQ */
    #define IO_ADC_3_CFG_IRQ_FIELD_MASK                            0x000C /* Interrupt setting for ADC channel */
    #define IO_ADC_3_CFG_IRQ_FIELD_OFFSET                          0x0002
      #define IO_ADC_3_CFG_IRQ_NONE                                0x0000 /* No interrupt */
      #define IO_ADC_3_CFG_IRQ_RISING                              0x0001 /* Trigger on Rising */
      #define IO_ADC_3_CFG_IRQ_FALLING                             0x0002 /* Trigger on falling */
      #define IO_ADC_3_CFG_IRQ_ANY                                 0x0003 /* Trigger on any */

/* ADC_4_CFG Register Fields */
    /* ADC_4_CFG -> Flags */
    #define IO_ADC_4_CFG_EN                                        0x0001 /* Enables ADC Channel */
    /* ADC_4_CFG -> Treshold */
    #define IO_ADC_4_CFG_TRESHOLD_FIELD_MASK                       0xFFF0 /* IRQ threshold for ADC channel */
    #define IO_ADC_4_CFG_TRESHOLD_FIELD_OFFSET                     0x0004
    /* ADC_4_CFG -> IRQ */
    #define IO_ADC_4_CFG_IRQ_FIELD_MASK                            0x000C /* Interrupt setting for ADC channel */
    #define IO_ADC_4_CFG_IRQ_FIELD_OFFSET                          0x0002
      #define IO_ADC_4_CFG_IRQ_NONE                                0x0000 /* No interrupt */
      #define IO_ADC_4_CFG_IRQ_RISING                              0x0001 /* Trigger on Rising */
      #define IO_ADC_4_CFG_IRQ_FALLING                             0x0002 /* Trigger on falling */
      #define IO_ADC_4_CFG_IRQ_ANY                                 0x0003 /* Trigger on any */

/* PWM_CONFIG Register Fields */
    /* PWM_CONFIG -> Flags */
    #define IO_PWM_CONFIG_CH0_ENABLE                               0x00000001 /* Enables PWM channel 0 */
    #define IO_PWM_CONFIG_CH1_ENABLE                               0x00000002 /* Enables PWM channel 1 */
    #define IO_PWM_CONFIG_CH2_ENABLE                               0x00000004 /* Enables PWM channel 2 */
    #define IO_PWM_CONFIG_CH3_ENABLE                               0x00000008 /* Enables PWM channel 3 */
    #define IO_PWM_CONFIG_CH4_ENABLE                               0x00000010 /* Enables PWM channel 4 */
    #define IO_PWM_CONFIG_CH5_ENABLE                               0x00000020 /* Enables PWM channel 5 */
    #define IO_PWM_CONFIG_CH6_ENABLE                               0x00000040 /* Enables PWM channel 6 */
    #define IO_PWM_CONFIG_CH7_ENABLE                               0x00000080 /* Enables PWM channel 7 */
    /* PWM_CONFIG -> Period */
    #define IO_PWM_CONFIG_PERIOD_FIELD_MASK                        0xFFFF0000 /* Period for PWM signals */
    #define IO_PWM_CONFIG_PERIOD_FIELD_OFFSET                      0x00000010
    /* PWM_CONFIG -> Prescaler */
    #define IO_PWM_CONFIG_PRESCALER_FIELD_MASK                     0x0000F000 /* Prescaler for PWM, using 16Mhz clock */
    #define IO_PWM_CONFIG_PRESCALER_FIELD_OFFSET                   0x0000000C
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_1                  0x00000000 /* divide clock by 1 (16Mhz) */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_2                  0x00000001 /* divide clock by 2 (8Mhz) */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_4                  0x00000002 /* divide clock by 4  (4Mhz) */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_8                  0x00000003 /* divide clock by 8  (2Mhz) */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_16                 0x00000004 /* divide clock by 16  (1Mhz) */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_32                 0x00000005 /* divide clock by 32  (500Khz) */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_64                 0x00000006 /* divide clock by 64  (250Khz) */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_128                0x00000007 /* divide clock by 128 (125Khz) */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_256                0x00000008 /* divide clock by 256 (62.5 Khz) */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_512                0x00000009 /* divide clock by 512  (31.25 Khz) */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_1024               0x0000000A /* divide clock by 1024 (1.5625 KHz) */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_2048               0x0000000B /* divide clock by 2048  () */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_4096               0x0000000C /* divide clock by 4096  () */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_8192               0x0000000D /* divide clock by 8192  () */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_16384              0x0000000E /* divide clock by 16384 () */
      #define IO_PWM_CONFIG_PRESCALER_PRESCALER_32768              0x0000000F /* divide clock by 32768 () */

/* WHO_AM_I Register Fields */
    /* WHO_AM_I -> ID */
    #define IO_WHO_AM_I_ID_FIELD_MASK                              0xFFFFFFFF /* ID of device */
    #define IO_WHO_AM_I_ID_FIELD_OFFSET                            0x00
      #define IO_WHO_AM_I_ID_STM8S003F3                            0x70 /* 20 pin variant */
      #define IO_WHO_AM_I_ID_STM8S003K3                            0x71 /* 32 pin variant */

/* VERSION Register Fields */
    /* VERSION -> MAJOR */
    #define IO_VERSION_MAJOR_FIELD_MASK                            0xFF000000 /* Major Version */
    #define IO_VERSION_MAJOR_FIELD_OFFSET                          0x00000018
    /* VERSION -> MINOR */
    #define IO_VERSION_MINOR_FIELD_MASK                            0x00FF0000 /* Major Version */
    #define IO_VERSION_MINOR_FIELD_OFFSET                          0x00000010
    /* VERSION -> PATCH */
    #define IO_VERSION_PATCH_FIELD_MASK                            0x0000FF00 /* Major Version */
    #define IO_VERSION_PATCH_FIELD_OFFSET                          0x00000008
    /* VERSION -> BUILD */
    #define IO_VERSION_BUILD_FIELD_MASK                            0x000000FF /* Major Version */
    #define IO_VERSION_BUILD_FIELD_OFFSET                          0x00000000


/*******************************************************************************
  Default Values                                                                              
*******************************************************************************/

#define IO_WHO_AM_I_DEFAULT                                        0xAB



